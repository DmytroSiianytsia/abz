{"version":3,"sources":["components/header/Header.js","components/button/Button.js","components/topBlock/TopBlock.js","components/aboutMe/AboutMe.js","components/user/User.js","components/users/Users.js","components/registration/Registration.js","components/footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","scrollTo","className","src","alt","tabIndex","onClick","Button","value","mod","func","TopBlock","AboutMe","User","props","user","photo","name","position","email","phone","length","Users","data","showMore","id","users","map","key","Registration","state","token","formData","position_id","getToken","fetch","then","response","json","setState","catch","error","Error","handleChange","e","target","handleSubmit","preventDefault","FormData","fileField","document","querySelector","append","files","method","body","headers","success","getUsers","resetCountUsers","console","this","onSubmit","htmlFor","type","aria-describedby","placeholder","onChange","Component","Footer","App","countUsers","urlUsers","showMoreUsers","prevState","coorY","window","top","behavior","prevProps","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dfc944ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header({ scrollTo }) { \r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"container\">\r\n                <div className=\"header__content\">\r\n                    <img src=\"./img/logo.svg\" alt=\"logo\" className=\"logo__img\" />\r\n                    <nav className=\"nav-header\">\r\n                        <ul className=\"nav\">\r\n                            <li className=\"nav__item\" tabIndex=\"0\" onClick={() => scrollTo(0)}>Main</li>\r\n                            <li className=\"nav__item\" tabIndex=\"1\" onClick={() => scrollTo(650)}>About me </li>                            \r\n                            <li className=\"nav__item\" tabIndex=\"2\">Requirements</li>\r\n                            <li className=\"nav__item\" tabIndex=\"3\" onClick={() => scrollTo(1400)}>Users</li>\r\n                            <li className=\"nav__item\" tabIndex=\"4\" onClick={() => scrollTo(2555)}>Sign Up</li>\r\n                        </ul>\r\n                    </nav>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Button.css';\r\n\r\nfunction Button({value = 'Sign up now', mod, func}) {\r\n    return (\r\n        <button className={`btn ${mod}`} onClick={func}>{value}</button>\r\n    );\r\n}\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './TopBlock.css';\r\nimport Button from \"../button/Button\";\r\n\r\nfunction TopBlock({scrollTo}) {\r\n    return (\r\n        <div className=\"top-block\">\r\n            <div className=\"container\">\r\n                <div className=\"top-block__content\">\r\n                    <h1 className=\"top-block__title\">\r\n                        Test assignment\r\n                        for Frontend Developer position\r\n                    </h1>\r\n                    <p className=\"top-block__text\">\r\n                        We kindly remind you that your test assignment should be submitted as a link to\r\n                        github/bitbucket repository. Please be patient, we consider and respond to every\r\n                        application that meets minimum requirements. We look forward to your submission. Good luck!\r\n                        The photo has to scale in the banner area on the different screens\r\n                    </p>\r\n                    <Button func={() => scrollTo(2500)}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TopBlock;\r\n","import React from 'react';\r\nimport Button from \"../button/Button\";\r\nimport './AboutMe.css';\r\n\r\nfunction AboutMe({scrollTo}) {\r\n    return (\r\n        <div className=\"about-me\">\r\n            <div className=\"container\">\r\n                <div className=\"about-me__content\">\r\n                    <h2 className=\"about-me__title\">\r\n                        Let's get acquainted\r\n                    </h2>\r\n                    <div className=\"about-me__wrap\">\r\n                        <div className=\"about-me__left\">\r\n                            <img src=\"./img/man-laptop-v1.svg\" alt=\"Man with laptop\" className=\"about-me__img\" />\r\n                        </div>\r\n                        <div className=\"about-me__right\">\r\n                            <h3 className=\"about-me__subtitle\">\r\n                                I am cool frontend developer\r\n                            </h3>\r\n                            <p className=\"about-me__text\">\r\n                                We will evaluate how clean your approach to writing CSS and Javascript code is.\r\n                                You can use any CSS and Javascript 3rd party libraries without any restriction.\r\n                            </p>\r\n                            <p className=\"about-me__text\">\r\n                                If 3rd party css/javascript libraries are added to the project via bower/npm/yarn you\r\n                                will get bonus points. If you use any task runner (gulp/webpack) you will get bonus\r\n                                points as well. Slice service directory page PSD mockup​ into HTML5/CSS3.\r\n                            </p>\r\n                            <Button value=\"Sign up now\" mod=\"btn_white\" func={() => scrollTo(2500)}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutMe;\r\n","import React from 'react';\r\nimport './User.css';\r\n\r\nfunction User(props) {\r\n    const {photo, name, position, email, phone} = props.user;\r\n    return (\r\n        <div className=\"user\">\r\n            <div className=\"user-content\">\r\n                <img src={photo} alt={name} className=\"user__photo\"/>\r\n                <div className=\"user__name\">{name}</div>\r\n                {name.length > 16 ? <div className=\"user__tooltip\">{name}</div> : ''}\r\n                <div className=\"user__position\">{position}</div>\r\n                <div className=\"user__email\">{email}</div>\r\n                <div className=\"user__phone\">{phone}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default User;\r\n","import React from 'react';\r\nimport './Users.css';\r\nimport User from \"../user/User\";\r\nimport Button from \"../button/Button\";\r\n\r\nfunction Users({data, showMore}) {\r\n    return (\r\n        data\r\n            ?\r\n            <div className=\"users\" id=\"users\">\r\n                <div className=\"container\">\r\n                    <div className=\"users__title\">\r\n                        Our cheerful users\r\n                    </div>\r\n                    <div className=\"users__subtitle\">\r\n                        Attention! Sorting users by registration date\r\n                    </div>\r\n                    <div className=\"users__list\">\r\n                        {data.users.map(user => <User user={user} key={user.id}/>)}\r\n                    </div>\r\n                    <div className=\"users__btn\">\r\n                        <Button value=\"Show more\" func={showMore}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div>Loading...</div>\r\n    );\r\n}\r\n\r\nexport default Users;\r\n","import React, { Component } from 'react';\r\nimport './Registration.css';\r\n\r\nclass Registration extends Component {\r\n\r\n    state = {\r\n        token: null,\r\n        formData: {\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            position_id: null\r\n        },    \r\n    };  \r\n\r\n    getToken = () => {\r\n        fetch('https://frontend-test-assignment-api.abz.agency/api/v1/token')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ token: data.token }))\r\n            .catch(error => new Error(error));\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            formData: {\r\n                ...this.state.formData,\r\n                [e.target.name]: e.target.value\r\n            }\r\n        })\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone, position_id } = this.state.formData;\r\n        const formData = new FormData();\r\n        const fileField = document.querySelector('#customFile');\r\n\r\n        formData.append('position_id', position_id);\r\n        formData.append('name', name);\r\n        formData.append('email', email);\r\n        formData.append('phone', phone);\r\n        formData.append('photo', fileField.files[0]);\r\n\r\n        fetch('https://frontend-test-assignment-api.abz.agency/api/v1/users', {\r\n            method: 'POST',\r\n            body: formData,\r\n            headers: {\r\n                'Token': this.state.token,\r\n            },\r\n        })\r\n            .then(function (response) {\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                if (data.success) {\r\n                    this.props.getUsers();\r\n                    this.props.resetCountUsers();\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.error('Some error: ', error)\r\n            });\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.getToken()\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone } = this.state.formData;\r\n        return (\r\n            <div className=\"registration\" id=\"registration\">\r\n                <div className=\"container\">\r\n                    <div className=\"registration__content\">\r\n                        <div className=\"registration__title\">\r\n                            Register to get a work\r\n                        </div>\r\n                        <div className=\"registration__subtitle\">\r\n                            Attention! After successful registration and alert,\r\n                            update the list of users in the block from the top\r\n                        </div>\r\n\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"name\" className=\"form-control__label\">Name</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"name\"\r\n                                    name=\"name\"\r\n                                    value={name}\r\n                                    aria-describedby=\"nameHelp\"\r\n                                    placeholder=\"Your name\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <label htmlFor=\"email\" className=\"form-control__label\">Email</label>\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    id=\"email\"\r\n                                    name=\"email\"\r\n                                    value={email}\r\n                                    aria-describedby=\"emailHelp\"\r\n                                    placeholder=\"Your email\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <label htmlFor=\"phone\" className=\"form-control__label\">Phone number</label>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    id=\"phone\"\r\n                                    name=\"phone\"\r\n                                    value={phone}\r\n                                    aria-describedby=\"phoneHelp\"\r\n                                    placeholder=\"+380 XX XXX XX XX\"\r\n                                    onChange={(e) => this.handleChange(e)}\r\n                                />\r\n                                <small id=\"phoneHelp\" className=\"form-text text-muted\">\r\n                                    Еnter phone number in open format\r\n                                </small>\r\n                                <legend className=\"select-position\">Select your position</legend>\r\n                                <div className=\"custom-control custom-radio\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"customRadio1\"\r\n                                        name=\"position_id\"\r\n                                        value=\"1\"\r\n                                        className=\"custom-control-input\"\r\n                                        onChange={(e) => this.handleChange(e)}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"customRadio1\">\r\n                                        Frontend developer\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-radio\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"customRadio2\"\r\n                                        name=\"position_id\"\r\n                                        value=\"2\"\r\n                                        className=\"custom-control-input\"\r\n                                        onChange={(e) => this.handleChange(e)}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"customRadio2\">\r\n                                        Backend developer\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-radio\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"customRadio3\"\r\n                                        name=\"position_id\"\r\n                                        value=\"3\"\r\n                                        className=\"custom-control-input\"\r\n                                        onChange={(e) => this.handleChange(e)}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"customRadio3\">\r\n                                        Designer\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"custom-control custom-radio\">\r\n                                    <input\r\n                                        type=\"radio\"\r\n                                        id=\"customRadio4\"\r\n                                        name=\"position_id\"\r\n                                        value=\"4\"\r\n                                        className=\"custom-control-input\"\r\n                                        onChange={(e) => this.handleChange(e)}\r\n                                    />\r\n                                    <label className=\"custom-control-label\" htmlFor=\"customRadio4\">\r\n                                        QA\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"photo\">Photo</div>\r\n                            <div className=\"custom-file custom-width\">\r\n                                <input\r\n                                    type=\"file\"\r\n                                    className=\"custom-file-input\"\r\n                                    id=\"customFile\"\r\n                                />\r\n                                <label className=\"custom-file-label\" htmlFor=\"customFile\">Upload your photo</label>\r\n                            </div>\r\n                            <div className=\"form__btn\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"btn btn-primary\"\r\n                                >\r\n                                    Sign up now\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Registration;\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <hr/>\r\n            <div className=\"container\">\r\n                <div className=\"footer__content\">\r\n                    <div className=\"footer__text\">\r\n                        © abz.agency specially for the test task\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React, {Component} from 'react';\nimport './App.css';\nimport Header from \"./components/header/Header\";\nimport TopBlock from \"./components/topBlock/TopBlock\";\nimport AboutMe from \"./components/aboutMe/AboutMe\";\nimport Users from \"./components/users/Users\";\nimport Registration from \"./components/registration/Registration\";\nimport Footer from \"./components/footer/Footer\";\n\nclass App extends Component {\n    state = {\n        data: null,\n        countUsers: 6\n    };\n\n    getUsers = () => {\n        const urlUsers =\n            `https://frontend-test-assignment-api.abz.agency/api/v1/users?page=1&count=${this.state.countUsers}`;\n        fetch(urlUsers)\n            .then(response => response.json())\n            .then(data => this.setState({data: data}))        \n    };\n\n    showMoreUsers = () => {\n        this.setState(prevState => ({\n            countUsers: prevState.countUsers + 6\n        }))\n    };\n\n    resetCountUsers = () => {\n      this.setState({countUsers: 6})\n    };\n\n    scrollTo(coorY) {\n        window.scrollTo({\n            top: coorY,\n            behavior: \"smooth\"\n        });\n    }\n\n    componentDidMount() {\n        this.getUsers()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.state.countUsers !== prevState.countUsers) {\n            this.getUsers()\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header scrollTo={this.scrollTo}/>\n                <TopBlock scrollTo={this.scrollTo}/>\n                <AboutMe scrollTo={this.scrollTo}/>\n                <Users\n                    data={this.state.data}\n                    showMore={this.showMoreUsers}\n                />\n                <Registration\n                    getUsers={this.getUsers}\n                    resetCountUsers={this.resetCountUsers}\n                />\n                <Footer/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}